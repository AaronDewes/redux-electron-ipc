!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("electron-redux-ipc",[],t):"object"==typeof exports?exports["electron-redux-ipc"]=t():e["electron-redux-ipc"]=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return e[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t){"use strict";function n(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function r(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if("object"!==("undefined"==typeof e?"undefined":c(e)))throw new TypeError('createIpc expects an events object as its first parameter, you passed type "'+("undefined"==typeof e?"undefined":c(e))+'"');return Object.keys(e).forEach(function(t){if("function"!=typeof e[t])throw new TypeError("Each key in createIpc's events object must be a dispatch-able function, key \""+t+'" is of type "'+c(e[t])+'"')}),function(t){var r=t.dispatch;return Object.keys(e).forEach(function(t){window.ipcRenderer.on(t,function(){r(e[t].apply(e,arguments))})}),function(e){return function(t){if(t.type.startsWith("@@IPC")){var r;(r=window.ipcRenderer).send.apply(r,[t.channel].concat(n(t.args||[])))}return e(t)}}}}function o(e){return{type:"@@IPC",channel:e,args:Array.prototype.slice.call(arguments,1)}}Object.defineProperty(t,"__esModule",{value:!0});var c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=r,t.send=o}])});